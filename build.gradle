plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'java'
	id 'groovy'
	id 'com.commercehub.gradle.plugin.avro' version '0.19.0'
	id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

group = 'com.github.chasdevs.events'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.12'

repositories {
	mavenCentral()
	maven {
		url 'http://packages.confluent.io/maven/'
	}
}

ext {
	avdlSrcDir = 'schemas'
	avprGenDir = 'target/generated/avpr'
	avscGenDir = 'target/generated/avsc'
	javaGenDir = 'target/events-java/src/main/java' // used for publishing java library
}

sourceSets {
	test {
		groovy {
			srcDirs = ["src/test/java", "src/test/groovy"]
		}
	}
}

test {
	testLogging {
		events "passed", "skipped", "failed"
	}
	dependsOn "cleanTest"
	outputs.upToDateWhen { false }
	exclude '**/*IntegrationSpec*'
}

dependencies {
	implementation 'org.springframework.shell:spring-shell-starter:2.0.0.RELEASE'
	
	implementation 'io.confluent:kafka-schema-registry-client:5.3.0'
	implementation 'org.apache.avro:avro:1.9.2'
	implementation 'org.apache.avro:avro-compiler:1.9.2'

	implementation 'com.google.guava:guava:28.2-jre'
	
	implementation 'com.hotels:avro-compatibility:2.2.0'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}

clean {
	delete avprGenDir, avscGenDir, javaGenDir
}

task generateAvpr(type: com.commercehub.gradle.plugin.avro.GenerateAvroProtocolTask) {
	source(file(avdlSrcDir))
	outputDir = file(avprGenDir)
}

task generateAvsc(type: com.commercehub.gradle.plugin.avro.GenerateAvroSchemaTask) {
	dependsOn generateAvpr
	source(file(avprGenDir))
	outputDir = file(avscGenDir)
	doLast {
		delete avprGenDir
	}
}

task generateJava(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
	dependsOn generateAvsc
	source(file(avscGenDir))
	outputDir = file(javaGenDir)
	doLast {
		delete avscGenDir
	}
}

build.doLast {
	println(jar.archivePath)
}